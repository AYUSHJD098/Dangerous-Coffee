# Dengerous-min-Coffee(Image/File-Encrpter)-v0.1 2020
#Python: v3.7(Windows 10 x64 build)
#This Software Uses Sqlite(command-line)-Database ,
# to safely store the Data Of your choice.
#It Stores Data in Bianary form.
#This prevents to leak data if our Data data is intercepted,
# In Travel/Movement.
#Author : Ayush Jadhav , Contact : Jadhavayush1100@gmail.com
# Feel Free to Ulter the script as you  like (credit will be appreciated)

import base64, codecs
magic = 'IyBEZW5nZXJvdXMtQ29mZmVlKEltYWdlL0ZpbGUtRW5jcnB0ZXIpLXYwLjEgMjAyMA0KI1B5dGhvbjogdjMuNyhXaW5kb3dzIDEwIHg2NCBidWlsZCkNCiNUaGlzIFNvZnR3YXJlIFVzZXMgU3FsaXRlKGNvbW1hbmQtbGluZSktRGF0YWJhc2UgLA0KIyB0byBzYWZlbHkgc3RvcmUgdGhlIERhdGEgT2YgeW91ciBjaG9pY2UuDQojSXQgU3RvcmVzIERhdGEgaW4gQmlhbmFyeSBmb3JtLg0KI1RoaXMgcHJldmVudHMgdG8gbGVhayBkYXRhIGlmIG91ciBEYXRhIGRhdGEgaXMgaW50ZXJjZXB0ZWQsDQojIEluIFRyYXZlbC9Nb3ZlbWVudC4NCiNBdXRob3IgOiBBeXVzaCBKYWRoYXYgLCBDb250YWN0IDogSmFkaGF2YXl1c2gxMTAwQGdtYWlsLmNvbQ0KIyBGZWVsIEZyZWUgdG8gVWx0ZXIgdGhlIHNjcmlwdCBhcyB5b3UgIGxpa2UgKGNyZWRpdCB3aWxsIGJlIGFwcHJlY2lhdGVkKQ0KDQojSW1wb3J0aW5nIA0KaW1wb3J0IHNxbGl0ZTMNCmZyb20gc3lzIGltcG9ydCBleGl0DQoNCiMgU3RhcnQvU3RvcCBzd2ljdGggZm9yIGNvbXB1dGVyIA0KcHJvZ3JhbV9pc19ydW5uaW5nID0gVHJ1ZQ0KDQojRGF0YSBPYmplY3QNCmNsYXNzIERhdGFPYmplY3Q6DQogICAgZGVmIF9faW5pdF9fIChzZWxmLCBuYW1lLCBpbWcgKToNCiAgICAgICAgc2VsZi5uYW1lID0gbmFtZSANCiAgICAgICAgc2VsZi5pbWcgPSBpbWcNCg0KICAgIEBzdGF0aWNtZXRob2QNCiAgICBkZWYgY29ubmVjdCgpOg0KICAgICAgICAjU2F5IGhlbGxvIHRvIGNvbm5leSEgDQogICAgICAgICNDb25uZXkgd2lsbCBoZWxwIHVzIENvbW11bmljYXRlIFdpdGggT3VyIERhdGFiYXNlLCBUaGlzIGNvbm5lY3RzIE91ciBEYXRhQmFzZQ0KICAgICAgICBjb25uZXkgID0gc3FsaXRlMy5jb25uZWN0KCdjb2ZmZWUuZGInKQ0KDQogICAgICAgICNDcmVhdGVpbmcgQ3Vzcm9yIEZvciBPdXIgRGF0YWJhc2UNCiAgICAgICAgI0RhdGFCYXNlIG5hbWVkIGltZyB3aWxsIGJlIHNhdmVkIGluIHNhbWUgZGlyZWN0b3J5IGFzIHlvdXIgZXhlY3V0YWJsZSBmaWxlIQ0KICAgICAgICBjdXIgPSBjb25uZXkuY3Vyc29yKCkNCg0K'
love = 'VPNtVPNtVPNwITucplOOoTIupaDtVSEbLKDtG3IlVREuqTSvLKAyVTymVTAiozIwL3EyMPNuVFRAPvNtVPNtVPNtpUWcoaDbVxEuqTSvLKAyVRAioz5yL3EyMPOmqJAwMKAzqJkfrFRvXD0XVPNtVPNtVPOlMKE1pz4tL29hozI5YPOwqKVAPt0XVPNtVTEyMvOwo252MKW0K2WcLJ5upaxbp2IfMvx6QDbtVPNtVPNtVPACpTIhnJ5aVUEbMFOWoJSaMD0XVPNtVPNtVPO3nKEbVT9jMJ4bp2IfMv5coJpfW3WvWlxtVTSmVTL6QDbtVPNtVPNtVPNtVPOvnJShLKW5K2ygMlN9VTLhpzIuMPtcQDbtVPNtVPNtVPNtVPOlMKE1pz4tLzyuozSlrI9coJpAPt0XVPNtVTEyMvNtL3WyLKEyK3EuLzkyplumMJkzXGbAPvNtVPNtVPNtV0AlMJS0MJyhMlOHLJWfMKZtLJ5xVRAioUIgoaZtEz9lVR91pvORLKEuDzSmMFucoJphMTVcQDbtVPNtVPNtVPZtD3WyLKEyVUEuLzkyVN0XVPNtVPNtVPOwqKVhMKuyL3I0MFtaWlqQHxIOIRHtIRSPGRHtnJ1aBGNAPvNtVPNtVPNtVPNtVPNbozSgMFO0MKu0YPOcoJptLzkiLvxaWlpcQDbtVPNtVPNtVTAioz5yrF5wo21gnKDbXD0XQDbtVPNtMTIzVTSxMS9xLKEuXUAyoTLtYPOvnJShLKW5K2ygMljtL3IlYPOwo25hMKxcBt0XVPNtVPNtVPNwDJExnJ5aVTygLJqyVTShMPOBLJ1yVUEiVREuqTSPLKAyVD0XVPNtVPNtVPOcoJqsMTVtCFOzVxyBH0IFIPOWGyECVTygMmxjVPNbozSgMFkcoJpcVSMuoUIyplNbClj/XFNvQDbtVPNtVPNtVTEuqTRtCFNbp2IfMv5hLJ1yYPOvnJShLKW5K2ygMlxAPvNtVPNtVPNtL3IlYzI4MJA1qTHbnJ1aK2EvYPOxLKEuXD0XVPNtVPNtVPOwo25hMKxhL29goJy0XPxAPt0XV01yoaHAPaOlnJ50XPWAMJ51YFuRMJ5apzIiqKZgD29zMzIyXFVcQDcjpzyhqPtaXvptXvN1ZPxAPaOlnJ50XPWHrKOyVSfkKFO0olOjo3A0Y2yhpUI0VTEuqTRvXD0XpUWcoaDbVyE5pTHtJmWqVPO0olOlMKElnKMyVTEuqTRvXD0XpUWcoaDbVyE5pTHtJmAqVUEiVTI4nKDtVvxAPaOlnJ50XPpdWlNdVQHjXD0XLJA0nJ9hVQ0tnJ50XTyhpUI0XPWSoaEypvOBqJ1vMKVtMz9lVUyiqKVtL2uinJAyVTAioJ1uozDtCw4+VvxcVN0XQDc3nTyfMFOu'
god = 'Y3Rpb24gIT0gMzoNCg0KICAgICN3cml0ZWluZyBkYXRhDQogICAgaWYgYWN0aW9uID09IDEgOg0KICAgICAgICANCg0KICAgICAgICBuYW1lID0gaW5wdXQoIkVudGVyIHRoZSBuYW1lIHlvdSB3YW50IHRoZSBmaWxlIHRvIGJlIHN0b3JlZCBhcyBpbiBEYXRhQmFzZSA+Pj4+IikNCiAgICAgICAgaW1nID0gaW5wdXQoIkVudGVyIFRoZSBsb2NhdGlvbiBvZiBGaWxlKGV4OiBEOlxpbWFnZXNcaW1nLnBuZykgPj4+PiIpDQogICAgICAgIA0KICAgICAgICB0cnk6DQogICAgICAgICAgICAjbWFraW5nIG9iamVjdA0KICAgICAgICAgICAgZG90YSA9IERhdGFPYmplY3QobmFtZSwgaW1nKQ0KDQogICAgICAgICAgICAjbWFraW5nIGNvbm5lY3Rpb24NCiAgICAgICAgICAgIGNvbm5leSAsIGN1ciA9IGRvdGEuY29ubmVjdCgpDQoNCiAgICAgICAgICAgICNDcmVhdGluZyB0YWJsZSBpZiB5b3UgdXNlIHRoaXMgc2NyaXB0IDJuZCB0aW1lIHRoZW4geW91IHdvdWxkIGhhdmUgdG8gY29tbWVudCB0aGlzICBjb21tYW5kIDowDQogICAgICAgICAgICBkb3RhLmNyZWF0ZV90YWJsZXMoKQ0KICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICBwcmludCgiQ29ubmVjdGlvbiB3YXMgdW5hYmxlIHRvIGJlIGVzdGFibGlzaGVkICEiLCBzcWxpdGUzLkVycm9yKQ0KICAgICAgICAgICAgcHJpbnQoIlByZXNzIGN0cmwrYyB0byBleGl0IikNCiAgICAgICAgI2NvbnZlcnRpbmcgZGF0YSB0byBiaW5hcnkgDQogICAgICAgIGJpYW5hcnlfaW1nID0gZG90YS5jb252ZXJ0X2JpYW5hcnkoKQ0KDQoNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgI0FkZGluZyBkYXRhIA0KICAgICAgICAgICAgZG90YS5hZGRfZGF0YShiaWFuYXJ5X2ltZyxjdXIsY29ubmV5KQ0KICAgICAgICAgICAgcHJpbnQoIkRhdGEgQWRkZWQgc3VjY2VzZnVsbHkiKQ0KICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICBwcmludCgiQWRkaW5nIERhdGEgd2FzIHVuc3VjY2Vzc2Z1bCIpDQoNCiAgICAgICAgI0Nvbm5leSB3aWxsIHNhdmUgb3VyIGNoYW5nZXMgd2l0aCB0aGlzIGNvbW1hbmQgQW5kIGNsb3NlcyB0'
destiny = 'nTHtMTS0LJWup2HAPvNtVPNtVPNtL29hozI5YzAioJ1cqPtcQDbtVPNtVPNtVTA1pv5woT9mMFtcQDbtVPNtVPNtVTAioz5yrF5woT9mMFtcQDbtVPNtVPNtVTWlMJSeQDbtVPNtQDbtVPNtV1WSqUWcqzyhMlOxLKEuQDbtVPNtnJLtLJA0nJ9hVQ09VQV6VN0XVPNtVPNtVPNwD29hozI5VUqcoTjtnTIfpPO1plOQo21gqJ5cL2S0MFOKnKEbVR91pvORLKEuLzSmMFjtITucplOwo25hMJA0plOCqKVtETS0LHWup2HAPvNtVPNtVPNtL29hozI5VPN9VUAkoTy0MGZhL29hozIwqPtaL29zMzIyYzEvWlxAPt0XVPNtVPNtVPNwD3WyLKEynJ5aVRA1p3WipvOTo3VtG3IlVREuqTSvLKAyQDbtVPNtVPNtVPARLKEuDzSmMFOhLJ1yMPOcoJptq2yfoPOvMFOmLKMyMPOcovOmLJ1yVTEcpzIwqT9lrFOuplO5o3IlVTI4MJA1qTSvoTHtMzyfMFRAPvNtVPNtVPNtL3IlVQ0tL29hozI5YzA1paAipvtcQDbAPvNtVPNtVPNtV1EbnKZtDJkyLKW0VPOHnTS0VR91pvORLKEuLzSmMFOcplOwo25yL2A0MJDtVFRuQDbtVPNtVPNtVUOlnJ50XPWRLKEuLzSmMFOQo25hMJA0MJDtp3IwL2ImMaIfoUxuVvxAPvNtVPNtVPNAPvNtVPNtVPNwVSS1MKW5plORLKEuVTWup2HtMz9lVREuqTRAPvNtVPNtVPNtp3SfK3AyoTIwqS9EqJIlrFN9VTA1pv5yrTIwqKEyXPWmMJkyL3DtXvOzpz9gVTygMmxjVvxAPvNtVPNtVPNtMz9lVUWiqlOcovOmpJksp2IfMJA0K1S1MKW5Bt0XVPNtVPNtVPNtVPNtpUWcoaDbpz93JmOqXD0XVPNtVPNtVPNtVPNtpaA2K2EuqTRtCFOlo3qoZI0APvNtVPNtVPNtV1qlnKEynJ5aVRMcoTImQDbtVPNtVPNtVTMhVQ0tnJ5jqKDbVzyhpUI0VUEbMFOhLJ1yVT9zVTEuqTRtrJ91VUquoz5uVUWyqUWcqzHtLJ5xVTSxMPOuVTSjpUWipUWcLKEyVTI4qTIhqTyiovOcMvOho3DtLKMunJkuLzkyCw4tVvxAPvNtVPNtVPNtq2y0nPOipTIhXTLvr2MhsFVfW3qvWlxtLKZtMwbAPvNtVPNtVPNtVPNtVTLhq3WcqTHbpaA2K2EuqTRcQDbAPvNtVPNwEKucqTyhMj0XVPNtVTyzVTSwqTyiovN9CFNmBvNtQDbtVPNtVPNtVUOlnJ50XPWSrTy0nJ5aYv4hVvxtVPNtQDbtVPNtVPNtVTWlMJSe'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))